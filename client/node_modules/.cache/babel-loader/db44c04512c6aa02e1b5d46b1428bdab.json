{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START,\n  payload: collectionsMap\n});\nexport const fetchCollectionsSucces = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const collectionsMap = convertCollectionSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSucces(collectionsMap)).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/react/udemy/e-commerce-website/website/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionSnapshotToMap","fetchCollectionsStart","collectionsMap","type","FETCH_COLLECTIONS_START","payload","fetchCollectionsSucces","FETCH_COLLECTIONS_SUCCESS","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,8BAApB,QAA0D,+BAA1D;AAEA,OAAO,MAAMC,qBAAqB,GAAIC,cAAD,KAAqB;AACtDC,EAAAA,IAAI,EAAEL,eAAe,CAACM,uBADgC;AAEtDC,EAAAA,OAAO,EAAEH;AAF6C,CAArB,CAA9B;AAKP,OAAO,MAAMI,sBAAsB,GAAGJ,cAAc,KAAK;AACrDC,EAAAA,IAAI,EAAEL,eAAe,CAACS,yBAD+B;AAErDF,EAAAA,OAAO,EAAEH;AAF4C,CAAL,CAA7C;AAMP,OAAO,MAAMM,uBAAuB,GAAGC,YAAY,KAAK;AACpDN,EAAAA,IAAI,EAAEL,eAAe,CAACY,yBAD8B;AAEpDL,EAAAA,OAAO,EAAEI;AAF2C,CAAL,CAA5C;AAKP,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC5C,SAAOC,QAAQ,IAAI;AACf,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAGAY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CACKC,QAAQ,IAAI;AACT,YAAMf,cAAc,GAAGF,8BAA8B,CAACiB,QAAD,CAArD;AACAL,MAAAA,QAAQ,CAACN,sBAAsB,CAACJ,cAAD,CAAvB,CAAR,CACKgB,KADL,CACWC,KAAK,IAAIP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAD5B;AAEH,KALL;AAOH,GAZD;AAaH,CAdM","sourcesContent":["import ShopActionTypes from './shop.types'\r\nimport { firestore, convertCollectionSnapshotToMap } from '../../firebase/firebase.utils'\r\n\r\nexport const fetchCollectionsStart = (collectionsMap) => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_START,\r\n    payload: collectionsMap\r\n})\r\n\r\nexport const fetchCollectionsSucces = collectionsMap => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n    payload: collectionsMap\r\n\r\n})\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload: errorMessage\r\n})\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n    return dispatch => {\r\n        const collectionRef = firestore.collection('collections')\r\n        dispatch(fetchCollectionsStart())\r\n\r\n\r\n        collectionRef.get().then(\r\n            (snapshot => {\r\n                const collectionsMap = convertCollectionSnapshotToMap(snapshot)\r\n                dispatch(fetchCollectionsSucces(collectionsMap))\r\n                    .catch(error => dispatch(fetchCollectionsFailure(error.message)))\r\n            })\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}