{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\react\\\\udemy\\\\e-commerce-website\\\\website\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionsOwerviewWithSpinner = WithSpinner(CollectionsOverview);\n_c = CollectionsOwerviewWithSpinner;\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n_c2 = CollectionPageWithSpinner;\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOwerviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 72\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 80\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionsOwerviewWithSpinner\");\n$RefreshReg$(_c2, \"CollectionPageWithSpinner\");","map":{"version":3,"sources":["C:/Users/User/Desktop/react/udemy/e-commerce-website/website/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","createStructuredSelector","CollectionsOverview","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","WithSpinner","CollectionsOwerviewWithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,wBAAT,QAAyC,UAAzC;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACJ,mBAAD,CAAlD;KAAMK,8B;AACN,MAAMC,yBAAyB,GAAGF,WAAW,CAACH,cAAD,CAA7C;MAAMK,yB;;AAEN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AACnCC,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEP,MAAAA;AAAF,QAAiC,KAAKQ,KAA5C;AACAR,IAAAA,0BAA0B;AAC7B;;AACDS,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAkC,KAAKH,KAA7C;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGJ,KAAD,iBAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAgEH,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ;AAMH;;AAbkC;;AAiBvC,MAAMK,eAAe,GAAGhB,wBAAwB,CAAC;AAC7Cc,EAAAA,oBAAoB,EAAEV;AADuB,CAAD,CAAhD;;AAIA,MAAMa,kBAAkB,GAAGC,QAAQ,KAAK;AACpCf,EAAAA,0BAA0B,EAAE,MAAMe,QAAQ,CAACf,0BAA0B,EAA3B;AADN,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { createStructuredSelector } from 'reselect'\r\n\r\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component'\r\nimport CollectionPage from '../collection/collection.component'\r\n\r\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions'\r\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selector'\r\n\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component'\r\n\r\nconst CollectionsOwerviewWithSpinner = WithSpinner(CollectionsOverview)\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage)\r\n\r\nclass ShopPage extends React.Component {\r\n    componentDidMount() {\r\n        const { fetchCollectionsStartAsync } = this.props\r\n        fetchCollectionsStartAsync()\r\n    }\r\n    render() {\r\n        const { match, isCollectionFetching } = this.props\r\n        return (\r\n            <div className=\"shop-page\">\r\n                <Route exact path={`${match.path}`} render={(props) => <CollectionsOwerviewWithSpinner isLoading={isCollectionFetching} {...props} />} />\r\n                <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={isCollectionFetching} {...props} />} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = createStructuredSelector({\r\n    isCollectionFetching: selectIsCollectionFetching\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage)"]},"metadata":{},"sourceType":"module"}