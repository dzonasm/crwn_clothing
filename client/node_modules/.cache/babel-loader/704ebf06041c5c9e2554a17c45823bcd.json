{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyD9boiLwoluf5KVsVoXnHOEXd66J2N6420\",\n  authDomain: \"e-commerce-website-654b8.firebaseapp.com\",\n  databaseURL: \"https://e-commerce-website-654b8.firebaseio.com\",\n  projectId: \"e-commerce-website-654b8\",\n  storageBucket: \"e-commerce-website-654b8.appspot.com\",\n  messagingSenderId: \"542698267181\",\n  appId: \"1:542698267181:web:bbc10ff40317e0cbf70ea4\",\n  measurementId: \"G-P5XEVZWE7Z\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n  console.log(snapShot);\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (err) {\n      console.log('error creating user', err.message);\n    }\n  }\n\n  return userRef;\n};\nfirebase.initializeApp(config);\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef);\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["C:/Users/User/Desktop/react/udemy/e-commerce-website/website/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","exists","displayName","email","createdAt","Date","set","err","message","initializeApp","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,0CAFD;AAGXC,EAAAA,WAAW,EAAE,iDAHF;AAIXC,EAAAA,SAAS,EAAE,0BAJA;AAKXC,EAAAA,aAAa,EAAE,sCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAYA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;;AAEA,MAAI,CAACA,QAAQ,CAACI,MAAd,EAAsB;AAClB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBZ,QAA/B;AACA,UAAMa,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;AAEA,QAAI;AACA,YAAMZ,OAAO,CAACa,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAHc;AAId,WAAGZ;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOe,GAAP,EAAY;AACVR,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCO,GAAG,CAACC,OAAvC;AACH;AACJ;;AAED,SAAOf,OAAP;AACH,CA1BM;AA4BPb,QAAQ,CAAC6B,aAAT,CAAuB5B,MAAvB;AAEA,OAAO,MAAM6B,yBAAyB,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACtE,QAAMC,aAAa,GAAGnB,SAAS,CAACoB,UAAV,CAAqBH,aAArB,CAAtB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYa,aAAZ;AAEH,CAJM;AAOP,OAAO,MAAME,IAAI,GAAGnC,QAAQ,CAACmC,IAAT,EAAb;AACP,OAAO,MAAMrB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAGP,MAAMsB,QAAQ,GAAG,IAAIpC,QAAQ,CAACmC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAepC,QAAf","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore'\r\nimport 'firebase/auth'\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyD9boiLwoluf5KVsVoXnHOEXd66J2N6420\",\r\n    authDomain: \"e-commerce-website-654b8.firebaseapp.com\",\r\n    databaseURL: \"https://e-commerce-website-654b8.firebaseio.com\",\r\n    projectId: \"e-commerce-website-654b8\",\r\n    storageBucket: \"e-commerce-website-654b8.appspot.com\",\r\n    messagingSenderId: \"542698267181\",\r\n    appId: \"1:542698267181:web:bbc10ff40317e0cbf70ea4\",\r\n    measurementId: \"G-P5XEVZWE7Z\"\r\n};\r\n\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`)\r\n\r\n    const snapShot = await userRef.get();\r\n\r\n    console.log(snapShot)\r\n\r\n    if (!snapShot.exists) {\r\n        const { displayName, email } = userAuth\r\n        const createdAt = new Date()\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalData\r\n            })\r\n        } catch (err) {\r\n            console.log('error creating user', err.message)\r\n        }\r\n    }\r\n\r\n    return userRef\r\n}\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const addCollectionAndDocuments = (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey)\r\n    console.log(collectionRef)\r\n\r\n}\r\n\r\n\r\nexport const auth = firebase.auth()\r\nexport const firestore = firebase.firestore()\r\n\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider()\r\nprovider.setCustomParameters({ prompt: 'select_account' })\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}