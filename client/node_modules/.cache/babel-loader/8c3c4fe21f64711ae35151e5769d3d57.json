{"ast":null,"code":"import { createSelector } from 'reselect';\nimport memoize from 'lodash.memoize';\nconst COLLECTION_ID_MAP = {\n  hats: 1,\n  sneakers: 2,\n  jackets: 3,\n  womens: 4,\n  men: 5\n};\n\nconst selectShop = state => state.shop;\n\nexport const selectCollections = createSelector([selectShop], shop => shop.collections);\nexport const selectCollection = memoize(collectionUrlParam => {\n  return createSelector([selectCollections], collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam]));\n});","map":{"version":3,"sources":["C:/Users/User/Desktop/react/udemy/e-commerce-website/website/src/redux/shop/shop.selector.js"],"names":["createSelector","memoize","COLLECTION_ID_MAP","hats","sneakers","jackets","womens","men","selectShop","state","shop","selectCollections","collections","selectCollection","collectionUrlParam","find","collection","id"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,MAAMC,iBAAiB,GAAG;AACtBC,EAAAA,IAAI,EAAE,CADgB;AAEtBC,EAAAA,QAAQ,EAAE,CAFY;AAGtBC,EAAAA,OAAO,EAAE,CAHa;AAItBC,EAAAA,MAAM,EAAE,CAJc;AAKtBC,EAAAA,GAAG,EAAE;AALiB,CAA1B;;AAQA,MAAMC,UAAU,GAAGC,KAAK,IAAIA,KAAK,CAACC,IAAlC;;AAEA,OAAO,MAAMC,iBAAiB,GAAGX,cAAc,CAC3C,CAACQ,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,gBAAgB,GAAGZ,OAAO,CAAEa,kBAAD,IAAwB;AAC5D,SAAOd,cAAc,CACjB,CAACW,iBAAD,CADiB,EAEjBC,WAAW,IAAIA,WAAW,CAACG,IAAZ,CAAiBC,UAAU,IAAIA,UAAU,CAACC,EAAX,KAAkBf,iBAAiB,CAACY,kBAAD,CAAlE,CAFE,CAArB;AAIH,CALsC,CAAhC","sourcesContent":["import { createSelector } from 'reselect'\r\nimport memoize from 'lodash.memoize'\r\n\r\nconst COLLECTION_ID_MAP = {\r\n    hats: 1,\r\n    sneakers: 2,\r\n    jackets: 3,\r\n    womens: 4,\r\n    men: 5\r\n}\r\n\r\nconst selectShop = state => state.shop\r\n\r\nexport const selectCollections = createSelector(\r\n    [selectShop],\r\n    shop => shop.collections\r\n)\r\n\r\nexport const selectCollection = memoize((collectionUrlParam) => {\r\n    return createSelector(\r\n        [selectCollections],\r\n        collections => collections.find(collection => collection.id === COLLECTION_ID_MAP[collectionUrlParam])\r\n    )\r\n})"]},"metadata":{},"sourceType":"module"}